Create two folders project1 and project2 locally. Create a repository in github or bitbucket, name it test_project
1.mkdir project1, mkdir project2

Switch to project1
2. cd project1

Switch to a new branch - 'staging'.
git checkout -b staging

Add a file in it - 'test1' and add content to it 'This is first commit'.
4.touch test1.txt, git add textt1.txt, git commit -m "this is first commit"
5.git checkout -b master 

Push it to github.
5. git push -u origin master 

Move to folder project2.
7. cd -, cd project2

Clone the repo in project2.
8.git clone git@github.com:shikharagr7/test_project.git

Switch to staging.
9.git checkout staging

Change the text in file 'test1' to 'This is second commit'.
Commit and push to remote branch.
10. git add test1.txt, git commit -m 'this is second commit", git push -u origin master

Move to project1.
Switch to staging branch.
11. git checkout staging

Change the text in file 'test1' to 'This is third commit'.
Commit and push to remote branch. (Explain what happened here).
12. git add test1.txt, git commit -m 'this is third commit", git push -u origin staging

Switch to master.
13. git checkoout master 

Merge staging branch into master.
14. git merge staging 

Create a new branch testing.
15. git checkout -b testing 

Change the text to 'A is an alphabet' and commit.
Repeat the 'step 18' seven times and each time update the alphabet 'A' to 'B' to 'C' etc.(Don't forget to commit the change everytime)
16. git add test1.txt, git commit -m "modified file a is an aphabet"
    (7 times)

Push the branch to github.
17.git push -u testing

Checkout to master.
18. git checkout master

Change the text '1 is a number' and commit.
Repeat the 'step 22' seven times and each time update the number '1' to '2' to '3' etc.(Don't forget to commit the change everytime)
19. git add test1.txt, git commit -m "modified file 1 is a number"
    (7 times)

Push master branch to github.
20. git push -u origin master

Now, rebase testing into master(and don't push the new master and testing branch).
21. git rebase testing 
    (ran into merge conflict, skipped for the time being using git rebase --skip (7 times))

Move to project2.
22. cd - , cd projet2

Track testing branch.
23. git checkout testing, git log 

Checkout to master.
24. git checkout master 

Merge branch testing into master.
25. git merge testing (everything up to date since skipped the conflicts earlier)